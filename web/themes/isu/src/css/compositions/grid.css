/* AUTO GRID
Related Every Layout: https://every-layout.dev/layouts/grid/
More info on the flexible nature: https://piccalil.li/tutorial/create-a-responsive-grid-layout-with-no-media-queries-using-css-grid/
A flexible layout that will create an auto-fill grid with
configurable grid item sizes

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-s-m)): This defines the space
between each item.

--grid-min-item-size (16rem): How large each item should be
ideally, as a minimum.

--grid-placement (auto-fill): Set either auto-fit or auto-fill
to change how empty grid tracks are handled */
.grid {
  display: grid;
  grid-template-columns: repeat(
    var(--grid-placement, auto-fill),
    minmax(var(--grid-min-item-size, 16rem), 1fr)
  );
  gap: var(--gutter, var(--space-s-l));

  --flow-space: var(--space-s-l);
}

.grid[data-rows='masonry'] {
  grid-template-rows: masonry;
  align-items: start;
}

.grid[data-layout='1/2'] {
  --grid-placement: auto-fit;
  --grid-min-item-size: clamp(16rem, 50vw, 26rem);

  .l-page-sidebar & {
    --grid-min-item-size: clamp(16rem, 50vw, 20rem);
  }
}

.grid[data-layout='1/3'] {
  --grid-placement: auto-fit;
  --grid-min-item-size: var(--grid-min-item-size-custom, clamp(16rem, 50vw, 20rem));

  &.grid--gallery {
    --grid-min-item-size: var(--grid-min-item-size-custom, clamp(12rem, 50vw, 12rem));
  }
}

.grid[data-layout='1/4'] {
  --grid-placement: auto-fit;
  --grid-min-item-size: var(--grid-min-item-size-custom, clamp(10rem, 50vw, 16rem));
}

.grid--events {
  @media only screen and (max-width: 1142px) {
    grid-template-columns: 1fr;
  }
}
