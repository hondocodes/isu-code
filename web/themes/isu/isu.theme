<?php

function isu_preprocess_node(&$variables) {
  $node = $variables['node'];

  $revision = \Drupal::routeMatch()->getRawParameter('node_revision');

  if($revision) {
    $node = \Drupal::entityTypeManager()->getStorage('node')->loadRevision($revision);
  }

  if($node) {

    if(isset($node->body->summary)) {
      $variables['summary'] = ['#markup' => $node->body->summary];
    }

    if($node->getType() == 'page_post') {
      $categories = array();
      for($i = 0; $i < count($node->get('field_categories')); $i++) {
        if (!empty($node->get('field_categories')[$i]->entity)){
          $categories[] = '<a href="/taxonomy/term/'.$node->get('field_categories')[$i]->entity->id().'">'.$node->get('field_categories')[$i]->entity->get('name')->value.'</a>';
        }
      }
      $variables['categories'] = implode(',', $categories);
    } elseif($node->getType() == 'event') {
      $date = $node->get('field_event_date')->getValue();

      $startTs = $node->get('field_event_date')->getValue()[0]['value'];
      $start_date = \Drupal\Core\Datetime\DrupalDateTime::createFromTimestamp($startTs);

      if(count($date) > 1) {
        $endTs = $node->get('field_event_date')->getValue()[1]['value'];
        $end_date = \Drupal\Core\Datetime\DrupalDateTime::createFromTimestamp($endTs);
      }

      $variables['start_date'] = $start_date->format('M j');
      $variables['start_month'] = $start_date->format('M');
      $variables['start_day'] = $start_date->format('j');


      if(count($date) > 1) {
        $variables['end_date'] = $end_date->format('M j');
        if($start_date->format('j') != $end_date->format('j')) {
          $variables['end_month'] = $end_date->format('M');
          $variables['end_day'] = $end_date->format('j');
        }
      }
    }
  }

}

/**
* Implements hook_theme_suggestions_HOOK_alter().
*/
function isu_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $revision = \Drupal::routeMatch()->getRawParameter('node_revision');

  if ($revision) {
      $revised_node = \Drupal::entityTypeManager()
                             ->getStorage('node')
                             ->loadRevision($revision);

    $content_type = $revised_node->bundle();
    $suggestions[] = 'page__'.$content_type;
  } elseif ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__'.$content_type;
    print_r($suggestions)
  }

  if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical' && $tid = \Drupal::routeMatch()->getRawParameter('taxonomy_term')) {
    $term = \Drupal\taxonomy\Entity\Term::load($tid);
    $suggestions[] = 'page__taxonomy__' . $term->bundle();
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function isu_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if(isset($variables['elements']['content']['field_items'])) {
    if($variables['elements']['content']['field_items']['#bundle'] == 'primary_nav') {
      $suggestions[] = 'block__primary_nav';
    }
  }

  if(isset($variables['elements']['content']['field_bottom_links'])) {
    if($variables['elements']['content']['field_bottom_links']['#bundle'] == 'footer') {
      $suggestions[] = 'block__footer';
    }
  }

  if(isset($variables['elements']['content']['field_subnav_links'])) {
    if($variables['elements']['content']['field_subnav_links']['#bundle'] == 'sidebar_subnav') {
      $suggestions[] = 'block__sidebar_subnav';
    }
  }
}

function isu_preprocess_paragraph(&$variables) {

  $paragraph = $variables['paragraph'];

  if($paragraph->bundle() == 'pt_testimonial_slider') {
    $testimonials = $paragraph->get('field_p_testimonials');
    $i = 0;
    foreach($testimonials->referencedEntities() as $t) {
      $i++;
    }
    $variables['testimonial_count'] = $i;
    $variables['testimonials'] = _isu_testimonial_slider($paragraph);
  } elseif($paragraph->bundle() == 'pt_feature_panel_full_width') {
    $variables['remove_top_margin'] = $paragraph->get('field_p_remove_top_margin')->getString();
  } elseif($paragraph->bundle() == 'pt_events_two_up_curated') {
    $variables['events'] = _isu_events_two_up_curated($paragraph);
  } elseif($paragraph->bundle() == 'pt_events_three_up_curated') {
    $variables['events'] = _isu_events_three_up_curated($paragraph);
  } elseif($paragraph->bundle() == 'pt_events_two_up_by_category') {
    $variables['events'] = _isu_events_two_up_by_category($paragraph);
  } elseif($paragraph->bundle() == 'pt_events_three_up_by_category') {
    $variables['events'] = _isu_events_three_up_by_category($paragraph);
  }
}

function _isu_events_two_up_curated($paragraph){
  $events = $paragraph->get('field_p_events');

  $events_array = array();
  foreach($events->referencedEntities() as $e) {
    $events_array[] = _isu_theme_node($e->id(), 'announcement');
  }

  return $events_array;
}

function _isu_events_three_up_curated($paragraph){
  $events = $paragraph->get('field_p_events_three_up');

  $events_array = array();

  $i = 0;
  foreach($events->referencedEntities() as $e) {
    if($i%2 == 0) {
      $events_array[] = _isu_theme_node($e->id(), 'headline_alt');
    } else {
      $events_array[] = _isu_theme_node($e->id(), 'headline');
    }
    $i++;
  }
  return $events_array;
}

function _isu_events_two_up_by_category($paragraph){
  $categories = $paragraph->get('field_p_categories');

  $category_tids = array();
  foreach($categories->referencedEntities() as $cat) {
    $category_tids[] = $cat->id();
  }

  $events = array();
  if(count($category_tids) > 0) {
    $sql = "SELECT n.nid FROM {node} n
    INNER JOIN {node_field_data} d
    ON n.nid = d.nid";

    if(count($category_tids) > 0 ) {
      $sql .= " INNER JOIN {node__field_event_primary_topic} c
          ON n.nid = c.entity_id";
    }

    $sql .= " WHERE n.type = 'event'
    AND d.status = 1";

    if(count($category_tids) > 0 ) {
      $sql .= " AND c.field_event_primary_topic_target_id IN (:tids[])";
    }

    $sql .= " ORDER BY d.title ASC";

    $database = \Drupal::database();
    if(count($category_tids) > 0) {
      $result = $database->query($sql, [
        ':tids[]' => $category_tids
      ]);
    } else {
      $result = $database->query($sql);
    }

    if($result) {
      while ($row = $result->fetchAssoc()) {
        $events[] = $row['nid'];
      }
    }
  }

  $events_array = array();
  foreach($events as $e) {
    $events_array[] = _isu_theme_node($e, 'announcement');
  }
  return $events_array;
}

function _isu_events_three_up_by_category($paragraph){
  $categories = $paragraph->get('field_p_categories');

  $category_tids = array();
  foreach($categories->referencedEntities() as $cat) {
    $category_tids[] = $cat->id();
  }

  $events = array();
  if(count($category_tids) > 0) {
    $sql = "SELECT n.nid FROM {node} n
    INNER JOIN {node_field_data} d
    ON n.nid = d.nid";

    if(count($category_tids) > 0 ) {
      $sql .= " INNER JOIN {node__field_event_primary_topic} c
          ON n.nid = c.entity_id";
    }

    $sql .= " WHERE n.type = 'event'
    AND d.status = 1";

    if(count($category_tids) > 0 ) {
      $sql .= " AND c.field_event_primary_topic_target_id IN (:tids[])";
    }

    $sql .= " ORDER BY d.title ASC";

    $database = \Drupal::database();
    if(count($category_tids) > 0) {
      $result = $database->query($sql, [
        ':tids[]' => $category_tids
      ]);
    } else {
      $result = $database->query($sql);
    }

    if($result) {
      while ($row = $result->fetchAssoc()) {
        $events[] = $row['nid'];
      }
    }
  }

  $events_array = array();
  $i = 1;
  foreach($events as $e) {
    if($i%2 == 0) {
      $events_array[] = _isu_theme_node($e, 'headline_alt');
    } else {
      $events_array[] = _isu_theme_node($e, 'headline');
    }
    $i++;
  }
  return $events_array;
}

function _isu_testimonial_slider($paragraph) {
  $variation = $paragraph->get('field_p_tslider_variation');
  $testimonials = $paragraph->get('field_p_testimonials');

  $testimonial_array = array();
  if($variation->getString() == 1) {
    foreach($testimonials->referencedEntities() as $t) {
      $testimonial_array[] = _isu_theme_node($t->id(), 'testimonial_slide');
    }
  } else {
    foreach($testimonials->referencedEntities() as $t) {
      $testimonial_array[] = _isu_theme_node($t->id(), 'testimonial_slide_no_bg');
    }
  }

  return $testimonial_array;
}

function _isu_theme_node($nid, $view_mode = 'default') {
  $entity_type = 'node';
  $view_builder = \Drupal::entityTypeManager()->getViewBuilder($entity_type);
  $storage = \Drupal::entityTypeManager()->getStorage($entity_type);
  $node = $storage->load($nid);
  $build = $view_builder->view($node, $view_mode);
  return render($build);
}
